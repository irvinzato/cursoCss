/* --- RESPONSIVE DESIGN COMPLETO --- Es un concepto que se aplica a Css
QUE SE VEA BIEN EN TODAS LAS RESOLUCIONES (Todos los dispositivos)
Estructuras flexibles (contenedores flexibles, imagenes y videos flexibles)
Medias Queries

@Medias se usa en consultas de medios para aplicar diferentes estilos para diferentes tipos / dispositivos de medios
Los media query son condicionales, se usan con:
- ancho y alto de la ventana grafica
- ancho y alto del dispositivo
- orientacion (Â¿la tableta / telefono esta en modo horizontal o vertical)
- resolucion

Tipos de media querys:
- all Apto para todos los dispositivos
- print Destinado a material de impreso o visualizacion de documentos en una pantalla en el modo de vista previa de impresion
- screen Destinado principalmente a las pantallas, ES EL MAS UTILIZADO !
- speech Destinado a sintetizadores de voz

Operadores AND | OR

orientacion: landscape y portrait (landscape es cuando es mas ancho que largo y el otro lo contrario)

EJEMPLO, probar con mas propiedades !
.div-responsive {
    background: green;
}

Estructura de una media query, @media tipo condicional
@media screen and (min-width: 500px) and (max-width: 900px) {                  min-width: Que halla como minimo 500 px, de 500 pixeles para arriba es rojo
    .div-responsive{                                                           max-width: Que halla como maximo 900 px
        background: red;
    }
}

*/

* {
    font-family:Arial, Helvetica, sans-serif;
}

body {
    margin: 0px;
}

.content {
    display: flex;
    flex-direction: column;
}

.header, .main, .aside, .footer {
    padding: 10px;
}

.header {
    background: lightblue;
    padding: 20px;
}

.main {
    background: lightcoral;
    flex-basis: 300px;
    flex-grow: 4;                       /*Investigar propiedad*/
    flex-shrink: 0;                     /*Investigar propiedad*/
}

.aside {
    background: lightgreen;
    flex-basis: 200px;
    flex-grow: 1;                       /*Investigar propiedad*/
    flex-shrink: 0; 
}

.footer {
    background: lightpink;
    flex-grow: 1;
}


@media screen and (min-width: 800px) {
    .content {
        flex-direction: row;
        flex-wrap: wrap;
    }

    .header {
        flex-basis: 100%;           /*Con esto se vuelve bloque, revisar propiedad*/
    }

    .footer {
        flex-basis: 100%;
    }
}



/*---TRANSITION--- DE LAS COSAS MAS HERMOSAS Y UTILES ! 8:10:00
Permite realizar transiciones dentro de los elementos, mostrando el proceso de un cambio
PARA QUE TRANSITION EJECUTE, ES NECESARIO UN EVENTO HOVER, ONCLICK, ETC.
transition-property: property/ies - all -none
transition-duration: duration/s
transition-delay: delay/s
transition-timing-function: linear | ease | ease-in | ease-out | ease-in-out | step-end | steps(int,start|end) | inicital | inherit;  TRABAJA CON CURVAS
transition:
HACER EJERCICIO DE 8:22:00


EJEMPLOS
En dos divs con diferentes medidas y colores probar la propiedad, tambien hacer uso de hover, nota "transition-property: all" no es recomendable por que ocupa todos los elementos, esto puede hacer lenta la pagina 
Aqui seleccionamos especificamente la transicion en el background
transition-property: background;  QUE VAMOS A CAMBIAR
transition-duration: 1s;          CUANTO TIEMPO VA A TARDAR

--- ANIMACIONES ---
animation-name: name
animation-duration: duration
animation-delay: delay
animation-timing-function: (Transition values)
animation-iteration-count: number
animation-fill-mode: none | forwards | backwards | both | initial | inherit;

*/