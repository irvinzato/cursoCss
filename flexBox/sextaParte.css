/*FLEX BOX
El termino viene de cajas flexibles
Requiere de dos cosas, flex container y flex item
Tiene dos ejes, main axis como eje "x" y croos axis eje "y"
Consultar imagen
Los flex items son los que estan dentro del contenedor display = flex
Los flex items son solamente los hijos directos, si dentro de ese contenedor tenemos otro div con otros elemetos, ellos no son hijos directos
Para modificar a los items se debe afectar el CONTENEDOR principal, este modifica a todos los hijos
--- PROPIEDADES ---
Flex-Direction
Flex-Wap: No-wrap - Wrap - Wrap-reverse;
Flex-Flow: flex-direction flex-wrap; es para abreviar
Justify-Content: center, space-arround, space-between, space-evenly (MAIN AXIS) Para centrar el contenido
Aling-item: flex-start, center, flex-end, stretch, baseline (CROSS AXIS) Esto sirve para ajustar una sola linea
Align-content, esta sirve para ajustar todas las lineas
*/

* {
    font-family: sans-serif, cursive;
    font-weight: 100px;
    flex-wrap: wrap; /*Para que bajen los contenedores, si esta propiedad hacemos chica la pantalla y no bajaran*/
}

.contenedorFlex {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    height: 100vh; /*aL parecer con esto funciona align-items*/
    align-items: flex-start;
}

.itemFlex {
    background: #48e;
    color: #fff;
    padding: 15px;
    /*margin: 10px;*/
    height: 400px;
    width: 300px;
    /*margin-top: auto;*/
    flex-grow: 1;
}

.green {
    background: green;
    flex-basis: 400px;
    flex-shrink: 2;
}

.yellow {
    background: gray;
}

/*--- PROPIEDADES DE LOS ITEMS---
Align-self (CROOS AXIS)
En lugar de darselas al contenedor se las damos a los items

--- FUNCIONAMIENTO DEL MARGIN---
Margin-(direction): auto -> margin= contenedor - tama√±o de la caja en el eje en el que corre (direction)
Margin en Flex funciona tomando todo el margen primero y al final la caja
margin-top: auto; posicionaria la caja hasta abajo por que primero toma el top y al final la caja, lo mismo con las otras

Flex-grow: (Espacio asignado + sobrante / grows) (Main Axis) el espacio que sobra se le da a las o a la caja
segun el numero que le damos son los pedasos que abra, se le puede dar a varios items

Flex-shrink: Espacio que "cede" (Main Axis)
Va dar mas espacio a las demas cajas, si ponemos 2 va a dar el doble de espacio que el que dan las demas

Flex-basis: Mediciion antes de encogerse (En auto(defect value), agarra el width,
y si no tiene mas prioridad) (Main Axis)
Es como el width pero mas importante para flex

Flex - flex-grow, flex-shrink, flex-basis (al menos el primer parametro obligatorio)
Es agrupar las tres anteriores

Order: Como el z index, pero con el eje en el que apunta el Main Axis
El que tenga el valor mas grande va a estar al final
*/

/* MIS EJEMPLOS FLEX

* {
  box-sizing: border-box;
}

.flex-container {
  display: flex;
  flex-wrap: wrap;
  font-size: 30px;
  text-align: center;
  background: black;
  padding: 20px;
  border: 3px solid #a9a;

}

.flex-item-left {
  background-color: #f1f1f1;
  padding: 10px;
  flex: 40%;
  opacity: 20%;
  margin-right: 10px;
}

.flex-item-right {
  background-color: dodgerblue;
  padding: 10px;
  flex: 40%;
}

.flex-item-right p { 
  margin: center;
}

.flex-container2 {
	background: black;
    margin-top: 10px;
    padding: 15px;
    border-radius: 30px; 40px 0 40px 0;
}

.flex-container2 input {
	display: inline-flex;
	margin: 10px 10px;
    min-width: 40%;
}
*/